
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

:root {
  --background: 220 20% 96%; /* Light gray */
  --foreground: 220 10% 20%; /* Dark gray */
  --card: 0 0% 100%; /* White */
  --card-foreground: 220 10% 20%;
  --popover: 0 0% 100%;
  --popover-foreground: 220 10% 20%;
  --primary: 250 60% 50%; /* Purple */
  --primary-foreground: 0 0% 100%;
  --secondary: 220 15% 90%; /* Lighter gray */
  --secondary-foreground: 220 10% 30%;
  --muted: 220 15% 90%;
  --muted-foreground: 220 10% 40%;
  --accent: 220 15% 85%; /* Light gray for hover */
  --accent-foreground: 220 10% 15%;
  --destructive: 0 70% 50%; /* Red */
  --destructive-foreground: 0 0% 100%;
  --border: 220 15% 88%; /* Gray border */
  --input: 220 15% 88%;
  --ring: 250 60% 55%; /* Slightly darker purple for focus */
  --radius: 0.375rem; /* Tailwind's default md radius */
}

* {
  border-color: hsl(var(--border));
}

body {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  min-height: 100vh;
}

/* Simpler card style */
.game-card {
  background-color: hsl(var(--card));
  border-radius: var(--radius);
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  transition: box-shadow 0.2s ease-in-out;
}
.game-card:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}


/* Basic memory card flip */
.memory-card {
  perspective: 1000px;
}
.memory-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.5s;
  transform-style: preserve-3d;
}
.memory-card.flipped .memory-card-inner {
  transform: rotateY(180deg);
}
.memory-card-front, .memory-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: var(--radius);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  border: 1px solid hsl(var(--border));
}
.memory-card-front {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}
.memory-card-back {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  transform: rotateY(180deg);
}
.memory-card-back.matched {
  background-color: #4ade80; /* Green-400 */
  color: white;
}


/* Basic quiz option styling */
.quiz-option {
  transition: background-color 0.2s ease, border-color 0.2s ease;
  cursor: pointer;
}
.quiz-option.correct {
  background-color: #dcfce7; /* Green-100 */
  border-color: #4ade80; /* Green-400 */
  color: #15803d; /* Green-700 */
}
.quiz-option.incorrect {
  background-color: #fee2e2; /* Red-100 */
  border-color: #f87171; /* Red-400 */
  color: #b91c1c; /* Red-700 */
}


/* Basic drag and drop styling */
.drag-item {
  cursor: grab;
  transition: box-shadow 0.2s ease;
}
.drag-item:active {
  cursor: grabbing;
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}
.drop-zone {
  transition: background-color 0.2s ease, border-color 0.2s ease;
  border: 2px dashed hsl(var(--border));
}
.drop-zone.drag-over {
  border-color: hsl(var(--primary));
  background-color: hsla(var(--primary), 0.1);
}

/* Remove complex animations if any were added beyond basic transitions */
.streak-effect, .score-animation, .character-bounce {
  animation: none;
}

/* Remove glassmorphism and complex gradients */
.glassmorphism {
  background-color: hsl(var(--card)); /* Fallback to card style */
  border: 1px solid hsl(var(--border));
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}
body {
  background: hsl(var(--background)); /* Solid background */
}
.gradient-text { /* Fallback for gradient text */
  color: hsl(var(--primary));
  -webkit-background-clip: unset;
  -webkit-text-fill-color: unset;
  background-clip: unset;
}

/* Ensure h1 has a simpler style if it was complex */
h1 {
  font-size: 1.875rem; /* text-2xl */
  font-weight: 600; /* semibold */
  color: hsl(var(--foreground));
}

/* Ensure buttons have a simpler style */
button {
  /* Rely on shadcn/ui Button component variants for basic styling */
}
